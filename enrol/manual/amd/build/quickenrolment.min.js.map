<<<<<<< HEAD
{"version":3,"sources":["../src/quickenrolment.js"],"names":["define","Template","$","Str","Config","Notification","ModalFactory","ModalEvents","Fragment","Pending","SELECTORS","COHORTSELECT","TRIGGERBUTTONS","UNWANTEDHIDDENFIELDS","QuickEnrolment","options","contextid","initModal","prototype","courseid","modal","triggerButtons","when","get_strings","key","component","create","type","types","SAVE_CANCEL","large","then","strings","setTitle","setSaveButtonText","getRoot","on","save","submitForm","bind","submitFormAjax","hidden","setBody","shown","pendingPromise","bodyPromise","getBody","html","stringIndex","find","length","resolve","catch","exception","fail","e","preventDefault","submit","form","each","remove","formData","serialize","hide","script","wwwroot","ajax","processData","contentType","response","error","addNotification","message","window","M","core_formchangechecker","reset_form_dirty_state","location","reload","loadFragment","getFooter","render","init","config"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Quick enrolment AMD module.\n *\n * @module     enrol_manual/quickenrolment\n * @copyright  2016 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['core/templates',\n         'jquery',\n         'core/str',\n         'core/config',\n         'core/notification',\n         'core/modal_factory',\n         'core/modal_events',\n         'core/fragment',\n         'core/pending',\n       ],\n       function(Template, $, Str, Config, Notification, ModalFactory, ModalEvents, Fragment, Pending) {\n\n    /** @type {Object} The list of selectors for the quick enrolment modal. */\n    var SELECTORS = {\n        COHORTSELECT: \"#id_cohortlist\",\n        TRIGGERBUTTONS: \".enrolusersbutton.enrol_manual_plugin [type='submit']\",\n        UNWANTEDHIDDENFIELDS: \":input[value='_qf__force_multiselect_submission']\"\n    };\n\n    /**\n     * Constructor\n     *\n     * @param {Object} options Object containing options. The only valid option at this time is contextid.\n     * Each call to templates.render gets it's own instance of this class.\n     */\n    var QuickEnrolment = function(options) {\n        this.contextid = options.contextid;\n\n        this.initModal();\n    };\n    // Class variables and functions.\n\n    /** @var {number} courseid - */\n    QuickEnrolment.prototype.courseid = 0;\n\n    /** @var {Modal} modal */\n    QuickEnrolment.prototype.modal = null;\n\n    /**\n     * Private method\n     *\n     * @method initModal\n     * @private\n     */\n    QuickEnrolment.prototype.initModal = function() {\n        var triggerButtons = $(SELECTORS.TRIGGERBUTTONS);\n\n        $.when(\n            Str.get_strings([\n                {key: 'enroluserscohorts', component: 'enrol_manual'},\n                {key: 'enrolusers', component: 'enrol_manual'},\n            ]),\n            ModalFactory.create({\n                type: ModalFactory.types.SAVE_CANCEL,\n                large: true,\n            }, triggerButtons)\n        )\n        .then(function(strings, modal) {\n            this.modal = modal;\n\n            modal.setTitle(strings[1]);\n            modal.setSaveButtonText(strings[1]);\n\n            modal.getRoot().on(ModalEvents.save, this.submitForm.bind(this));\n            modal.getRoot().on('submit', 'form', this.submitFormAjax.bind(this));\n\n            // We want the reset the form every time it is opened.\n            modal.getRoot().on(ModalEvents.hidden, function() {\n                modal.setBody('');\n            });\n\n            modal.getRoot().on(ModalEvents.shown, function() {\n                var pendingPromise = new Pending('enrol_manual/quickenrolment:initModal:shown');\n                var bodyPromise = this.getBody();\n                bodyPromise.then(function(html) {\n                    var stringIndex = $(html).find(SELECTORS.COHORTSELECT).length ? 0 : 1;\n                    modal.setSaveButtonText(strings[stringIndex]);\n\n                    return;\n                })\n                .then(pendingPromise.resolve)\n                .catch(Notification.exception);\n\n                modal.setBody(bodyPromise);\n            }.bind(this));\n\n            return;\n        }.bind(this))\n        .fail(Notification.exception);\n    };\n\n    /**\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n     *\n     * @method submitForm\n     * @param {Event} e Form submission event.\n     * @private\n     */\n    QuickEnrolment.prototype.submitForm = function(e) {\n        e.preventDefault();\n        this.modal.getRoot().find('form').submit();\n    };\n\n    /**\n     * Private method\n     *\n     * @method submitForm\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    QuickEnrolment.prototype.submitFormAjax = function(e) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n\n        var form = this.modal.getRoot().find('form');\n\n        // Before send the data through AJAX, we need to parse and remove some unwanted hidden fields.\n        // This hidden fields are added automatically by mforms and when it reaches the AJAX we get an error.\n        var hidden = form.find(SELECTORS.UNWANTEDHIDDENFIELDS);\n        hidden.each(function() {\n            $(this).remove();\n        });\n\n        var formData = form.serialize();\n\n        this.modal.hide();\n\n        var settings = {\n            type: 'GET',\n            processData: false,\n            contentType: \"application/json\"\n        };\n\n        var script = Config.wwwroot + '/enrol/manual/ajax.php?' + formData;\n        $.ajax(script, settings)\n            .then(function(response) {\n\n                if (response.error) {\n                    Notification.addNotification({\n                        message: response.error,\n                        type: \"error\"\n                    });\n                } else {\n                    // Reload the page, don't show changed data warnings.\n                    if (typeof window.M.core_formchangechecker !== \"undefined\") {\n                        window.M.core_formchangechecker.reset_form_dirty_state();\n                    }\n                    window.location.reload();\n                }\n                return;\n            })\n            .fail(Notification.exception);\n    };\n\n    /**\n     * Private method\n     *\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    QuickEnrolment.prototype.getBody = function() {\n        return Fragment.loadFragment('enrol_manual', 'enrol_users_form', this.contextid, {}).fail(Notification.exception);\n    };\n\n    /**\n     * Private method\n     *\n     * @method getFooter\n     * @private\n     * @return {Promise}\n     */\n    QuickEnrolment.prototype.getFooter = function() {\n        return Template.render('enrol_manual/enrol_modal_footer', {});\n    };\n\n    return /** @alias module:enrol_manual/quickenrolment */ {\n        // Public variables and functions.\n        /**\n         * Every call to init creates a new instance of the class with it's own event listeners etc.\n         *\n         * @method init\n         * @public\n         * @param {object} config - config variables for the module.\n         */\n        init: function(config) {\n            (new QuickEnrolment(config));\n        }\n    };\n});\n"],"file":"quickenrolment.min.js"}
=======
{"version":3,"sources":["../src/quickenrolment.js"],"names":["Selectors","cohortSelector","triggerButtons","unwantedHiddenFields","buttonWrapper","getBodyForContext","contextId","Fragment","loadFragment","getDynamicTableForElement","element","wrapper","closest","DynamicTable","getTableFromId","dataset","tableUniqueid","registerEventListeners","document","addEventListener","e","target","preventDefault","showModal","dynamicTable","pendingPromise","Pending","ModalFactory","create","type","types","SAVE_CANCEL","large","title","Str","get_string","body","buttons","save","then","modal","getRoot","on","ModalEvents","find","submit","submitFormAjax","hidden","destroy","show","Promise","all","getBodyPromise","get","querySelector","setSaveButtonText","resolve","catch","Notification","exception","form","querySelectorAll","forEach","hiddenField","remove","hide","jQuery","ajax","Config","wwwroot","serialize","processData","contentType","response","error","Error","count","refreshTableContent","notificationBody","Toast","add","addNotification","message","init","contextid","Prefetch","prefetchStrings","prefetchString"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Quick enrolment AMD module.\n *\n * @module     enrol_manual/quickenrolment\n * @copyright  2016 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport * as DynamicTable from 'core_table/dynamic';\nimport * as Str from 'core/str';\nimport * as Toast from 'core/toast';\nimport Config from 'core/config';\nimport Fragment from 'core/fragment';\nimport ModalEvents from 'core/modal_events';\nimport ModalFactory from 'core/modal_factory';\nimport Notification from 'core/notification';\nimport jQuery from 'jquery';\nimport Pending from 'core/pending';\nimport Prefetch from 'core/prefetch';\n\nconst Selectors = {\n    cohortSelector: \"#id_cohortlist\",\n    triggerButtons: \".enrolusersbutton.enrol_manual_plugin [type='submit']\",\n    unwantedHiddenFields: \"input[value='_qf__force_multiselect_submission']\",\n    buttonWrapper: '[data-region=\"wrapper\"]',\n};\n\n/**\n * Get the content of the body for the specified context.\n *\n * @param {Number} contextId\n * @returns {Promise}\n */\nconst getBodyForContext = contextId => {\n    return Fragment.loadFragment('enrol_manual', 'enrol_users_form', contextId, {});\n};\n\n/**\n * Get the dynamic table for the button.\n *\n * @param {HTMLElement} element\n * @returns {HTMLElement}\n */\nconst getDynamicTableForElement = element => {\n    const wrapper = element.closest(Selectors.buttonWrapper);\n\n    return DynamicTable.getTableFromId(wrapper.dataset.tableUniqueid);\n};\n\n/**\n * Register the event listeners for this contextid.\n *\n * @param {Number} contextId\n */\nconst registerEventListeners = contextId => {\n    document.addEventListener('click', e => {\n        if (e.target.closest(Selectors.triggerButtons)) {\n            e.preventDefault();\n\n            showModal(getDynamicTableForElement(e.target), contextId);\n\n            return;\n        }\n    });\n};\n\n/**\n * Display the modal for this contextId.\n *\n * @param {HTMLElement} dynamicTable The table to beb refreshed when changes are made\n * @param {Number} contextId\n * @returns {Promise}\n */\nconst showModal = (dynamicTable, contextId) => {\n    const pendingPromise = new Pending('enrol_manual/quickenrolment:showModal');\n\n    return ModalFactory.create({\n        type: ModalFactory.types.SAVE_CANCEL,\n        large: true,\n        title: Str.get_string('enrolusers', 'enrol_manual'),\n        body: getBodyForContext(contextId),\n        buttons: {\n            save: Str.get_string('enrolusers', 'enrol_manual'),\n        }\n    })\n    .then(modal => {\n        modal.getRoot().on(ModalEvents.save, e => {\n            // Trigger a form submission, so that any mform elements can do final tricks before the form submission\n            // is processed.\n            // The actual submit even tis captured in the next handler.\n\n            e.preventDefault();\n            modal.getRoot().find('form').submit();\n        });\n\n        modal.getRoot().on('submit', 'form', e => {\n            e.preventDefault();\n\n            submitFormAjax(dynamicTable, modal);\n        });\n\n        modal.getRoot().on(ModalEvents.hidden, () => {\n            modal.destroy();\n        });\n\n        modal.show();\n\n        return modal;\n    })\n    .then(modal => Promise.all([modal, modal.getBodyPromise()]))\n    .then(([modal, body]) => {\n        if (body.get(0).querySelector(Selectors.cohortSelector)) {\n            return modal.setSaveButtonText(Str.get_string('enroluserscohorts', 'enrol_manual')).then(() => modal);\n        }\n\n        return modal;\n    })\n    .then(modal => {\n        pendingPromise.resolve();\n\n        return modal;\n    })\n    .catch(Notification.exception);\n};\n\n/**\n * Submit the form via ajax.\n *\n * @param {HTMLElement} dynamicTable\n * @param {Object} modal\n */\nconst submitFormAjax = (dynamicTable, modal) => {\n    // Note: We use a jQuery object here so that we can use its serialize functionality.\n    const form = modal.getRoot().find('form');\n\n    // Before send the data through AJAX, we need to parse and remove some unwanted hidden fields.\n    // This hidden fields are added automatically by mforms and when it reaches the AJAX we get an error.\n    form.get(0).querySelectorAll(Selectors.unwantedHiddenFields).forEach(hiddenField => hiddenField.remove());\n\n    modal.hide();\n    modal.destroy();\n\n    jQuery.ajax(\n        `${Config.wwwroot}/enrol/manual/ajax.php?${form.serialize()}`,\n        {\n            type: 'GET',\n            processData: false,\n            contentType: \"application/json\",\n        }\n    )\n    .then(response => {\n        if (response.error) {\n            throw new Error(response.error);\n        }\n\n        return response.count;\n    })\n    .then(count => {\n        return Promise.all([\n            Str.get_string('totalenrolledusers', 'enrol', count),\n            DynamicTable.refreshTableContent(dynamicTable),\n        ]);\n    })\n    .then(([notificationBody]) => notificationBody)\n    .then(notificationBody => Toast.add(notificationBody))\n    .catch(error => {\n        Notification.addNotification({\n            message: error.message,\n            type: 'error',\n        });\n    });\n};\n\n/**\n * Set up quick enrolment for the manual enrolment plugin.\n *\n * @param {Number} contextid The context id to setup for\n */\nexport const init = ({contextid}) => {\n    registerEventListeners(contextid);\n\n    Prefetch.prefetchStrings('enrol_manual', [\n        'enrolusers',\n        'enroluserscohorts',\n    ]);\n\n    Prefetch.prefetchString('enrol', 'totalenrolledusers');\n};\n"],"file":"quickenrolment.min.js"}
>>>>>>> remotes/origin/MOODLE_310_STABLE
